---
# Linux/Instala_EDR.yml

- name: Instalar agente con usuario dedicado (heterogéneo)
  hosts: all
  become: true
  gather_facts: false

  vars:
    install_script_abs: "/home/admendpoint/installScript.sh"
    installer_raw_url: "https://raw.githubusercontent.com/acuetosantillana/Playbooks/main/Instaladores/installScript.sh"
    install_args: "install"
    install_timeout: 300   # 5 min
    poll_delay: 5
    poll_retries: 60       # 60*5s = 5 min

  pre_tasks:
    - name: Detectar Python >=3.8 (sin depender de Python)
      ansible.builtin.raw: |
        set -euo pipefail
        choose_py() {
          for P in \
            /usr/bin/python3.12 /usr/local/bin/python3.12 python3.12 \
            /usr/bin/python3.11 /usr/local/bin/python3.11 python3.11 \
            /usr/bin/python3.10 /usr/local/bin/python3.10 python3.10 \
            /usr/bin/python3.9  /usr/local/bin/python3.9  python3.9  \
            /usr/bin/python3    /usr/local/bin/python3    python3; do
            if command -v "$P" >/dev/null 2>&1; then
              "$P" -c 'import sys; sys.exit(0 if (sys.version_info[0] > 3 or (sys.version_info[0]==3 and sys.version_info[1] >= 8)) else 1)' && { echo "$P"; return 0; }
            fi
          done
          return 1
        }
        if choose_py >/tmp/.ans_py_path 2>/dev/null; then
          cat /tmp/.ans_py_path; exit 0
        fi
        # Intentar instalar python3 (sin dnf)
        if command -v yum >/dev/null 2>&1; then
          yum -y install python3 || true
        elif command -v apt-get >/dev/null 2>&1; then
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -y && apt-get install -y python3
        elif command -v zypper >/dev/null 2>&1; then
          zypper --non-interactive refresh
          zypper --non-interactive install -y python3 || true
        else
          echo "No hay gestor de paquetes compatible para instalar python3" >&2
          exit 1
        fi
        choose_py >/tmp/.ans_py_path || { echo "Python >=3.8 no disponible" >&2; exit 1; }
        cat /tmp/.ans_py_path
      register: py_detect
      changed_when: false

    - name: Fijar ansible_python_interpreter a lo detectado
      ansible.builtin.set_fact:
        ansible_python_interpreter: "{{ py_detect.stdout | trim }}"

    - name: Asegurar sudo (raw; yum/apt/zypper; sin dnf)
      ansible.builtin.raw: |
        set -euo pipefail
        command -v sudo >/dev/null 2>&1 && exit 0
        if command -v yum >/dev/null 2>&1; then
          yum -y install sudo
        elif command -v apt-get >/dev/null 2>&1; then
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -y && apt-get install -y sudo
        elif command -v zypper >/dev/null 2>&1; then
          zypper --non-interactive install -y sudo
        fi
      changed_when: false

    - name: Recolectar facts con el intérprete correcto
      ansible.builtin.setup:

  tasks:
    - name: Crear usuario admendpoint con home y shell
      ansible.builtin.user:
        name: admendpoint
        shell: /bin/bash
        create_home: yes
        home: /home/admendpoint

    - name: Asegurar permisos del home
      ansible.builtin.file:
        path: /home/admendpoint
        owner: admendpoint
        group: admendpoint
        mode: "0750"
        state: directory

    - name: Descargar SOLO el instalador desde GitHub (sin clonar repo)
      ansible.builtin.get_url:
        url: "{{ installer_raw_url }}"
        dest: "{{ install_script_abs }}"
        owner: admendpoint
        group: admendpoint
        mode: "0750"
        force: yes
        validate_certs: yes

    - name: Publicar sudoers para admendpoint (NOPASSWD + env_keep)
      ansible.builtin.copy:
        dest: /etc/sudoers.d/admendpoint
        mode: "0440"
        owner: root
        group: root
        content: |
          # Permisos específicos para el usuario admendpoint
          Defaults:admendpoint !requiretty
          Defaults:admendpoint env_keep += "SYSTEMD_PAGER SYSTEMD_COLORS LANG LC_ALL http_proxy https_proxy no_proxy"

          admendpoint     ALL=(root)      NOPASSWD: \
            /home/admendpoint/installScript.sh, \
            /usr/bin/vi /etc/systemd/system/cpla.service, \
            /usr/bin/systemctl start cpla.service, \
            /usr/bin/systemctl stop cpla.service, \
            /usr/bin/systemctl status cpla.service, \
            /usr/bin/systemctl restart cpla.service, \
            /usr/bin/systemctl daemon-reload, \
            /usr/bin/sh -x /home/admendpoint/installScript.sh install
        validate: '/usr/sbin/visudo -cf %s'

    - name: Verificar si ya existe la unidad de systemd cpla
      ansible.builtin.stat:
        path: /etc/systemd/system/cpla.service
      register: cpla_unit

    - name: Lanzar instalador (async, log; máx 5 min)
      become: false
      become_user: admendpoint
      enviro
