---
- name: Actualizar SOLO el kernel con yum (Rocky/RHEL/Alma)
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    allow_reboot: true   # pon en false si NO quieres que reinicie automáticamente

  pre_tasks:
    - name: Kernel actual
      command: uname -r
      register: current_kernel
      changed_when: false

    - name: Listar kernels instalados antes
      shell: "ls -1 /lib/modules || true"
      register: modules_before
      changed_when: false

  tasks:
    - name: Actualizar kernel con yum (sin afectar otros paquetes)
      # yum es un wrapper de dnf en Rocky 8/9, pero lo llamamos explícitamente
      shell: |
        set -e
        yum -y update kernel kernel-core kernel-modules
      register: yum_update
      changed_when: false  # determinamos cambio comparando /lib/modules

    - name: Listar kernels instalados después
      shell: "ls -1 /lib/modules || true"
      register: modules_after
      changed_when: false

    - name: Detectar si hay kernel nuevo instalado
      set_fact:
        kernel_changed: "{{ (modules_after.stdout_lines | difference(modules_before.stdout_lines)) | length > 0 }}"
        newest_kernel_installed: "{{ (modules_after.stdout_lines | sort | last | default('')) }}"

    - name: Reiniciar si hay kernel nuevo
      reboot:
        msg: "Reiniciando para arrancar con el nuevo kernel"
        connect_timeout: 10
        reboot_timeout: 900
        pre_reboot_delay: 5
        post_reboot_delay: 15
      when:
        - allow_reboot
        - kernel_changed

    - name: Verificar kernel activo
      command: uname -r
      register: new_kernel
      changed_when: false

    - name: Mostrar resultado
      debug:
        msg:
          - "Kernel antes: {{ current_kernel.stdout }}"
          - "Kernel ahora: {{ new_kernel.stdout }}"
          - "¿Hubo cambio de kernel?: {{ kernel_changed }}"
